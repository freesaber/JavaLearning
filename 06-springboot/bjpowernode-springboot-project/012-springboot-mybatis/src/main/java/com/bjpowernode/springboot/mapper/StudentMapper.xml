<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bjpowernode.springboot.mapper.StudentMapper">
  <!--id 标签字段只能修饰主键字段-->
  <!--result 除了主键以外的字段-->
  <!--
    column数据库中的字段名称
    property最终映射对象的属性名称
    jdbcType列在数据库中的字段类型(可以省略不写)
  -->
  <!--
    resultMap作用
    1.数据库中字段名与实体对象的属性名不一致时，可以进行转换
    2.当查询的结果没有对应一个表的时候，可以自定义一个结果集
  -->
  <resultMap id="BaseResultMap" type="com.bjpowernode.springboot.model.Student">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="age" jdbcType="INTEGER" property="age" />
  </resultMap>

  <!--
    sql语句片段，将公共的部分抽取出来
    通过include标签引入sql语句片段
  -->
  <sql id="Base_Column_List">
    id, name, age
  </sql>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_student
    where id = #{id,jdbcType=INTEGER}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_student
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <!--要求所有属性都有值-->
  <insert id="insert" parameterType="com.bjpowernode.springboot.model.Student">
    insert into t_student (id, name, age)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER})
  </insert>

  <!--传过来的对象，哪个属性有值，添加的字段有值-->
  <insert id="insertSelective" parameterType="com.bjpowernode.springboot.model.Student">
    insert into t_student
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="age != null">
        age,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>

  <!--更新存在值的属性-->
  <update id="updateByPrimaryKeySelective" parameterType="com.bjpowernode.springboot.model.Student">
    update t_student
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        age = #{age,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!--每个属性都要更新-->
  <update id="updateByPrimaryKey" parameterType="com.bjpowernode.springboot.model.Student">
    update t_student
    set
      name = #{name,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

</mapper>